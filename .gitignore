# =========================================================================
# A comprehensive and secure .gitignore for Node.js projects
# =========================================================================

# -------------------------------------------------------------------------
# Dependencies & Lockfiles
#
# Ignore the node_modules directory entirely. This is the most important rule.
# Dependencies should be installed by running `npm install` using the
# package.json and package-lock.json files.
package-lock.json
ssl-verified.json
/node_modules

# We DO want to commit package-lock.json to ensure consistent installs.
# However, sometimes older versions of npm/yarn can create log files on error.
npm-debug.log*
yarn-debug.log*
yarn-error.log*


# -------------------------------------------------------------------------
# Logs
#
# Ignore log files generated by the application or other tools.
# They are specific to a running instance and don't belong in source control.
*.log
logs
*.log.*


# -------------------------------------------------------------------------
# Sensitive Information (SECURITY)
#
# Ignore environment variables files. These often contain secret keys,
# passwords, and other sensitive credentials. A template file
# (e.g., .env.example) should be committed instead.
.env
.env.local
.env.development.local
.env.production.local
.env.test.local

# You can uncomment the line below if you use .env.example as a template
# !.env.example


# -------------------------------------------------------------------------
# Build & Distribution Output
#
# Ignore compiled files and distribution directories. These are generated
# from the source code and shouldn't be stored in Git.
/dist
/build
/out
/public


# -------------------------------------------------------------------------
# IDE and Editor Directories
#
# Each developer has their own editor configuration. These files should not
# be shared in the project's repository.
.idea/           # JetBrains (WebStorm, IntelliJ)
.vscode/         # Visual Studio Code (except for shared settings, see below)
*.sublime-project
*.sublime-workspace
.project         # Eclipse
.classpath       # Eclipse

# If you want to share VS Code settings with your team, you can negate
# the specific files you want to commit.
# !.vscode/settings.json
# !.vscode/launch.json
# !.vscode/extensions.json


# -------------------------------------------------------------------------
# Operating System Files
#
# Ignore junk files created by macOS, Windows, and Linux.
.DS_Store        # macOS
.AppleDouble     # macOS
.LSOverride      # macOS
._*              # macOS resource forks

Thumbs.db        # Windows thumbnail cache
ehthumbs.db      # Windows thumbnail cache
Desktop.ini      # Windows folder customization

*~               # Backup files from some text editors
*.swp            # Swap files from Vim


# -------------------------------------------------------------------------
# Test & Coverage Reports
#
# Ignore reports generated by testing frameworks like Jest, Mocha, etc.
/coverage
.nyc_output


# -------------------------------------------------------------------------
# Temporary Files
#
# Ignore other temporary files or directories.
/tmp
*.tmp
*.temp
